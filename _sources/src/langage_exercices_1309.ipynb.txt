{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "Eléments du langage - exercices\n",
    "==========================="
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "## Que doit-on emmener?\n",
    "\n",
    "Ecrire un programme capable de conseiller deux objets utiles à emporter en voyage, en fonction de la température de l'air. On demande à l'utilisateur la température prévue.\n",
    "Si celle-ci est supérieure à 20°, il conseille \"maillot\" et \"crème bronzante\". Sinon, il conseille \"parapluie\" et \"pull\". "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## année bissextile \n",
    "Une année est bissextile si son millésime est multiple de 4; cependant, les années dont le millésime est multiple de 100 ne sont bissextiles que si c'est aussi un multiple de 400 (*1900 n'était pas bissextile, 2000 l'a été*).\n",
    "Ecrire un programme qui détermine si une année $N$ est bissextile ou non.  \n",
    "[Coup de pouce ?](https://brdarid.nohost.me/nextcloud/s/AaCAX7X3wfrxtfB)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "## Affichage de l'heure\n",
    "Ecrire un programme qui récupère l'heure d'un utilisateur sous la forme HH mm ss. Le programme doit afficher cette heure augmentée d'une seconde."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "## Affichage\n",
    "Ecrire un programme qui produit l'affichage ci-dessous, en utilisant une boucle conditionnelle:\n",
    "\n",
    "```python\n",
    "*\n",
    "**\n",
    "***\n",
    "****\n",
    "*****\n",
    "******\n",
    "*******\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "## Boucle for\n",
    "Résoudre l'exercice précédent en utilisant une boucle inconditionnelle (*for*).  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "## Problème à résoudre: Étape la plus longue \n",
    "*(Origine: [France-IOI](http://www.france-ioi.org))*  \n",
    "Dans votre petit carnet de voyage, vous avez noté la distance que vous avez parcourue chaque jour. Aujourd'hui, vous êtes particulièrement en forme et vous décidez donc de marcher plus que les jours précédents. Vous souhaitez utiliser un programme pour déterminer quel est votre record pour l'instant.  \n",
    "*Ce que doit faire votre programme :*  \n",
    "Votre programme doit d'abord lire un entier strictement positif, le nombre de jours de marche effectués jusqu'à présent. Il doit ensuite lire, pour chaque jour, la distance parcourue ce jour-là. Il doit alors afficher la distance maximale parcourue en une journée.  \n",
    "*Exemple d'entrée*  \n",
    "```python\n",
    "4\n",
    "8\n",
    "3\n",
    "12\n",
    "2\n",
    "```\n",
    "*Sortie*  \n",
    "```python\n",
    "12\n",
    "```\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
